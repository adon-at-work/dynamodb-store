{"version":3,"sources":["../lib/util.js"],"names":["toSecondsEpoch","debug","date","Date","Error","Math","floor","getTime","message","object","process","env","DYNAMODB_STORE_DEBUG","argument","undefined","console","log","JSON","stringify"],"mappings":"8EAKgBA,c,CAAAA,c,SAYAC,K,CAAAA,K,CAZT,QAASD,eAAT,CAAwBE,IAAxB,CAA8B,CACnC,GAAI,EAAEA,eAAgBC,KAAlB,CAAJ,CAA6B,CAC3B,KAAM,IAAIC,MAAJ,CAAW,GAAEF,IAAK,iBAAlB,CACP,CACD,MAAOG,MAAKC,KAAL,CAAWJ,KAAKK,OAAL,GAAiB,IAA5B,CACR,CAOM,QAASN,MAAT,CAAeO,OAAf,CAAwBC,MAAxB,CAAgC,CACrC,GAAIC,QAAQC,GAAR,CAAYC,oBAAhB,CAAsC,CACpC,KAAMC,UAAWJ,SAAW,IAAX,EAAmBA,SAAWK,SAA9B,CAA0CL,MAA1C,CAAmD,EAApE,CAEAM,QAAQC,GAAR,CACG,GAAE,GAAIb,KAAO,sBAAqBK,OAAQ,EAD7C,CAEE,MAAOK,SAAP,GAAoB,QAApB,CAA+BI,KAAKC,SAAL,CAAeL,QAAf,CAA/B,CAA0DA,QAF5D,CAID,CACF","file":"util.js","sourcesContent":["/**\n * Transforms a date t seconds epoch.\n * @param  {Date} date The date to be converted.\n * @return {Integer}      Representation of the date in seconds epoch.\n */\nexport function toSecondsEpoch(date) {\n  if (!(date instanceof Date)) {\n    throw new Error(`${date} is not a Date!`);\n  }\n  return Math.floor(date.getTime() / 1000);\n}\n\n/**\n * Logs messages when debug is enabled.\n * @param  {String} message Message to be debugged.\n * @param  {Object} object  Optional param that will be strigified.\n */\nexport function debug(message, object) {\n  if (process.env.DYNAMODB_STORE_DEBUG) {\n    const argument = object !== null && object !== undefined ? object : '';\n    //eslint-disable-next-line\n    console.log(\n      `${new Date()} - DYNAMODB_STORE: ${message}`,\n      typeof argument === 'object' ? JSON.stringify(argument) : argument,\n    );\n  }\n}\n"]}